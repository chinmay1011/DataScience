Linear Regression
1. Linear regression model captures the linear relationships between numerical output and input variable.
2. Linear regression works by finding the best fitting straight line through the sample, this is called regression line.

In the simple case with just one input variable, the regression line is simply a line.
Equation of the line is :
y = mx + b
where m is the slope of the line and b is the intercept with y-axis. 

And, m and b are parameters of the model. Training a linear regression model means adjusting these parameters to fit
the regression line to the samples.

Least Squares Algorithm
The least squares method finds the regression line that makes the sum of the residuals as small as possible.
Residual is square of distance of the sample from the regression line. We want to find the line that minimizes
the sum of the squared errors of prediction.

Types of Linear regression
Simple linear regression -  If there are only one input variable.
Multiple linear regression - If there are more than one input variables.

import sqlite3
import pandas as pd 
from sklearn.tree import DecisionTreeRegressor
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
from math import sqrt

Data Ingestion thru DB
# Create your connection.
cnx = sqlite3.connect('database.sqlite')
df = pd.read_sql_query("SELECT * FROM Player_Attributes", cnx)

1. Split the Dataset into Training and Test Datasets 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=324) 

2. Linear Regression: Fit a model to the training set 
regressor = LinearRegression()
regressor.fit(X_train, y_train)
	OR
Decision Tree Regressor: Fit a new regression model to the training set
regressor = DecisionTreeRegressor(max_depth=20)
regressor.fit(X_train, y_train)


3. Perform Prediction using Linear Regression Model 
y_prediction = regressor.predict(X_test)

4. Evaluate Linear Regression Accuracy using Root Mean Square Error (captures the variation of predicted value 
from the onserved value.)
RMSE = sqrt(mean_squared_error(y_true = y_test, y_pred = y_prediction))